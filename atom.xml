<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SimpleBoy.苏苏</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-06T08:24:37.696Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>袁宇平</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTP</title>
    <link href="http://example.com/2021/09/04/hello-world/"/>
    <id>http://example.com/2021/09/04/hello-world/</id>
    <published>2021-09-03T16:00:00.000Z</published>
    <updated>2021-09-06T08:24:37.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><h3 id="1、Request"><a href="#1、Request" class="headerlink" title="1、Request"></a>1、Request</h3><h5 id="request对象和response对象的原理"><a href="#request对象和response对象的原理" class="headerlink" title="request对象和response对象的原理"></a>request对象和response对象的原理</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. request和response对象是由服务器创建的，我们来使用他们</span></span><br><span class="line"><span class="comment">//2. request对象是来获取请求消息，response对象是来设置响应消息</span></span><br></pre></td></tr></table></figure><h3 id="2、request对象继承体系结构"><a href="#2、request对象继承体系结构" class="headerlink" title="2、request对象继承体系结构"></a>2、request对象继承体系结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ServletRequest--接口</span><br><span class="line"></span><br><span class="line">HttpServletRequest--接口</span><br><span class="line"></span><br><span class="line">org.apche.catalina.connector.RequestFacade类（tomcat）</span><br></pre></td></tr></table></figure><h3 id="3、request功能"><a href="#3、request功能" class="headerlink" title="3、request功能"></a>3、request功能</h3><h5 id="1、获取请求消息数据"><a href="#1、获取请求消息数据" class="headerlink" title="1、获取请求消息数据"></a>1、获取请求消息数据</h5><ol><li><p>获取请求行数据</p><ol><li>获取请求方式：GET<ol><li>String    getMethod()</li></ol></li><li>获取虚拟目录：/<ol><li>String     getContextPath()</li></ol></li><li>获取Servlet路径：/demo2<ol><li>String     getServletPath()</li></ol></li><li>获取get方式请求参数：name = 输入值<ol><li>String    getQueryString()</li></ol></li><li>获取请求URI：<ol><li>String    getRequestURI():     /day14/demo2</li><li>StringBuffer  getRequestURL()     <a href="http://localhost/day14/demo">http://localhost/day14/demo</a></li></ol></li><li>获取协议及版本：<ol><li>String getProtocol()</li></ol></li><li>获取客户机的IP地址<ol><li>String     getRemoteAddr()</li></ol></li></ol></li><li><p>获取请求头数据</p><ol><li><p>(*)String getHeader(String name)    通过请求头的名称获取请求头的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String agent = req.getHeader(<span class="string">&quot;user-agent&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(agent.contains(<span class="string">&quot;Chrome&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;谷歌来了&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(agent.contains(<span class="string">&quot;Firefox&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;火狐来了&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>Enumeration<String>   getHeaderNames()    获取所有的请求头名称</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1、获取所有请求头名称</span></span><br><span class="line">        Enumeration&lt;String&gt; headerNames = req.getHeaderNames();</span><br><span class="line">        <span class="comment">//2、遍历</span></span><br><span class="line">        <span class="keyword">while</span>(headerNames.hasMoreElements()) &#123;</span><br><span class="line">            String name = headerNames.nextElement();</span><br><span class="line">            <span class="comment">//3、根据名称获取请求头的值</span></span><br><span class="line">            String value = req.getHeader(name);</span><br><span class="line">            System.out.println(name + <span class="string">&quot;---&quot;</span> + value);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>获取请求体数据</p><p>获取请求体数据</p></li><li><p>请求体：只有POST请求方式，才有请求体，在请求体中封装了POST请求参数</p></li></ol><p>获取流对象</p><ol><li>BufferedReader    getReader()   获取字符输入流，只能操作字符数据</li><li>ServletInputStream   getInputStream()  获取字节输入流，可以操作所有类型数据</li></ol><p>其他功能：</p><p>获取请求参数通用方式：不论是get还是post请求方式都可以使用下列方法来获取请求参数</p><ol><li>String    getParameter(String    name)：根据参数名称获取参数值</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="comment">//根据参数名称获取参数值的数组</span></span><br><span class="line">        System.out.println(username);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol><li><p>String[]    getParameterValues(String name)：根据参数名称获取参数值的数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String[] hobby = req.getParameterValues(<span class="string">&quot;hobby&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(String hobbys : hobby) &#123;</span><br><span class="line">            System.out.println(hobbys);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>Enumeration<String> getParameterNames()：获取所有请求的参数名称</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有请求参数名称</span></span><br><span class="line">        Enumeration&lt;String&gt; parameterNames = req.getParameterNames();</span><br><span class="line">        <span class="keyword">while</span>(parameterNames.hasMoreElements()) &#123;</span><br><span class="line">            String name = parameterNames.nextElement();</span><br><span class="line">            String value = req.getParameter(name);</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>Map&lt;String,   String[]&gt;   getParameterMap()：获取所有参数的map集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">//获取所有map参数的集合</span></span><br><span class="line">    Map&lt;String,String[]&gt; getParameterMap = req.getParameterMap();</span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    Set&lt;String&gt; keyset =  getParameterMap.keySet();</span><br><span class="line">    <span class="keyword">for</span>(String name : keyset) &#123;</span><br><span class="line">        <span class="comment">//获取键获取值</span></span><br><span class="line">        String[] value = getParameterMap.get(name);</span><br><span class="line">        <span class="keyword">for</span>(String values : value) &#123;</span><br><span class="line">            System.out.println(name + <span class="string">&quot; ： &quot;</span> + values);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">笔记</summary>
    
    
    
    
  </entry>
  
</feed>
